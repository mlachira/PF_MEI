---
title: "Modelo_ZIKA_Completo"
author: "Melisa Lachira Maya"
date: "2023-11-17"
output: html_document
---
# Modelo ZIKA

## Formulas

Alto riesgo

$$
\begin{array}{l}
\dot{S}_h=-\beta_1 S_h I_v -\beta_2 S_h I_h + v_h p- \mu_h S_h \\
\dot{E}_h=\beta_1 S_h I_v +\beta_2 S_h I_h -\delta_h E_h -\mu_h E_h \\
\dot{I}_h= \delta_h E_h - \gamma_h I_h + v_h (1-p) - \mu_h I_h\\
\dot{R}_h= \gamma_h I_h- \mu h R_h
\end{array}
$$
Vectores

$$
\begin{array}{l}
\dot{S}_v=-\beta_v S_v I_h - \mu_vS_v+ v_v \\
\dot{E}_v=\beta_v S_v I_h -\mu_v E_v- \delta E_v \\
\dot{I}_v= \delta E_v- \mu v I_v
\end{array}
$$

Bajo riesgo


```{r}
library(deSolve)
ZIKA_M <- function(times, state, pars) {
<<<<<<< Updated upstream
  with(as.list(c(state, pars)), {
    #Ecuaciones humanos
    dSh<- -beta1*Sh*Iv -beta2*Sh*Ih +vh*p -muh*Sh
    dEh<- beta1*Sh*Iv +beta2*Sh*Ih -deltah*Eh -muh*Eh
    dIh<- deltah*Eh -gammah*Ih +vh*(1-p) -muh*Ih
    dRh<- gammah*Ih -muh*Rh
    #Ecuaciones vectores
    dSv<- -betav*Sv*Ih -muv*Sv +vv
    dEv<- betav*Sv*Ih -deltav*Ev -muv*Ev
    dIv<- deltav*Ev -muv*Iv
    list(c(dSh, dEh, dIh, dRh, dSv, dEv, dIv))
=======
  S_H <- x[1]    # Humanos suceptibles de alto riesgo
  E_H <- x[2]    # Humanos expuestos de alto riesgo
  I_H <- x[3]    # Humanos infectados de alto riesgo
  R_H <- x[4]    # Humanos recuperados de alto riesgo
  S_V <- x[5]    # Vectores suceptibles
  E_V <- x[6]    # Vectores expuestos
  I_V <- x[7]    # Vectores infectados
  S_L <- x[8]    # Humanos suceptibles de bajo riesgo
  E_L <- x[9]    # Humanos expuestos de bajo riesgo
  I_L <- x[10]    # Humanos infectados de bajo riesgo
  R_L <- x[11]    # Humanos recuperados de bajo riesgo
  with(as.list(c(state, pars)), {
    #Ecuaciones alto riesgo
dS_H<- n_L*f*p_H - beta_H_H*S_H*I_H*(q_H) - beta_H_L*S_H*I_L - beta_H_V*S_H*I_V - mu*S_H
dE_H<- beta_H_H*S_H*I_H*(q_H) + beta_H_L*S_H*I_L + beta_H_V*S_H*I_V - mu*E_H - alfa_H*E_H
dI_H<- S_H*E_H + n_H*(1-p_H) - mu*I_H - tetha*I_H - gamma_H*I_H
dR_H<- gamma_H*I_H - mu*R_H
#Ecuaciones vectores
dS_V<- n_V - beta_V_L*S_V*I_L - beta_V_H*S_V*I_H - mu*S_V
dE_V<- beta_V_L*S_V*I_L + beta_V_H*S_V*I_H - mu*E_v - alfa_V*E_V
dI_V<- S_V*E_V - mu*I_V
#Ecuaciones bajo riesgo
dS_L<- n_L*(1-f)*p_L - beta_L_L*S_L*I_L*(q_L) - beta_L_V*S_L*I_V - beta_L_H*S_L*I_H - mu*S_L
dE_L<- beta_L_L*S_L*I_L*(q_L) + beta_L_V*S_L*I_V + beta_L_H*S_L*I_H - mu*E_L - alfa_L*E_L
dI_L<- S_L*E_L + n_L*(1-p_L) - mu*I_L - tetha*I_L - gamma_L*I_L
dR_L<- gamma_L*I_L - mu*R_L
list(c(dS_H, dE_H, dI_H, dR_H, dS_V, dE_V, dI_V, dS_L, dE_L, dI_L, dR_L))
>>>>>>> Stashed changes
  })
}
```

```{r}
#tiempo
times<- seq(1, 200 , by = 1)
#Parametros
<<<<<<< Updated upstream
parametro<- c(beta1 =0.6,beta2 =0.5, muh =0.4, vh =0.5, deltah = 0.7, gammah = 0.2, betav = 0.7, muv = 0.5, vv = 0.3, deltav = 0.2, p=0.2)
#Condiciones iniciales
cond_ini<-c(
  Sh =10,
  Eh =2,
  Ih =1,
  Rh =1,
  Sv =10,
  Ev =5,
  Iv =3
)

=======
parametro<- c(
  n = 0,
  beta = 0,
  q = 0,
  mu = 0,
  alfa = 0,
  gamma = 0,
  p = 0,
  tetha = 0
  )
#Condiciones iniciales
cond_ini<-c(
  S_H = 0, 
  E_H = 0,
  I_H = 0,
  R_H = 0, 
  S_V = 0, 
  E_V = 0,
  I_V = 0,
  S_L = 0, 
  E_L = 0, 
  I_L = 0,
  R_L = 0
  )
>>>>>>> Stashed changes
```

```{r}

out <- ode(y=cond_ini,
           times=times,
           fun = ZIKA_M, 
           parms  = parametro)

plot(out,col="pink")
par(mfrow=c(1,1))

graficaTG <- matplot(out[ , 1], out[ , 2:8], type="l", xlab = "tiempo", ylab = "Población", 
                     main= "Gráfica ZIKA", lwd = 2) 
legend("topright", c("Sh", "Eh", "Ih", "Rh", "Sv", "Ev", "Iv"), col =1:5, lty=1:5, cex=0.5)
```

